@model do_an_ao_hoa.Models.Student

@{
    ViewBag.Title = "Sửa sinh viên "+Model.name;
}
<div class="container">
    <h2 class="text-center text-secondary">Sửa sinh viên @Model.name</h2>
    <hr />
    @using (Html.BeginForm("Edit", "Student", FormMethod.Post, new { @enctype = "multipart/form-data", @class = "needs-validation", @novalidate = "true" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.image)
        @Html.HiddenFor(model => model.code)
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.name, htmlAttributes: new { @for = "name", @class = "control-label", @style = "cursor:pointer;" })
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control", @id = "name", @placeholder = "Nhập vào họ tên", @required = "true" } })
                <div class="valid-feedback">Valid</div>
                <div class="invalid-feedback">Nhập vào họ tên</div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.email, htmlAttributes: new { @for = "email", @class = "control-label", @style = "cursor:pointer;" })
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control", @id = "email", @placeholder = "Nhập vào email", @required = "true" } })
                <div class="valid-feedback">Valid</div>
                <div class="invalid-feedback">Nhập vào email</div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.phone, htmlAttributes: new { @for = "phone", @class = "control-label", @style = "cursor:pointer;" })
                @Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control", @id = "phone", @placeholder = "Nhập vào số điện thoại", @required = "true" } })
                <div class="valid-feedback">Valid</div>
                <div class="invalid-feedback">Nhập vào số điện thoại</div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.address, htmlAttributes: new { @for = "address", @class = "control-label", @style = "cursor:pointer;" })
                @Html.EditorFor(model => model.address, new { htmlAttributes = new { @class = "form-control", @id = "address", @placeholder = "Nhập vào địa chỉ", @required = "true" } })
                <div class="valid-feedback">Valid</div>
                <div class="invalid-feedback">Nhập vào địa chỉ</div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.image, htmlAttributes: new { @for = "customFile", @class = "control -label", @style = "cursor:pointer;" })
                <div class="mt-1">
                    <img alt="Error image" id="imgstudent" style="width:200px" src="~/Assets/img/@Model.image" />
                    <br />
                    <div class="custom-file">
                        <input name="file" type="file" class="custom-file-input form-control" id="customFile">
                        <label class="custom-file-label" for="customFile">Chọn file</label>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="">
                    <input type="submit" value="Lưu" class="btn btn-outline-success" />
                    <a href="/" class="btn btn-link">Trở về</a>
                </div>
            </div>
        </div>
    }
</div>
@section Scripts {
    <script>
        // Disable form submissions if there are invalid fields
        (function () {
            'use strict';
            window.addEventListener('load', function () {
                // Get the forms we want to add validation styles to
                var forms = document.getElementsByClassName('needs-validation');
                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('submit', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);

            // Add the following code if you want the name of the file appear on select
            $(".custom-file-input").on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).siblings(".custom-file-label").addClass("selected").html(fileName);
            });
        })();
    </script>
}